I"à<blockquote>
  <p><em>(Work in Progress)</em></p>

  <p>This blog post is being updated as iâ€™m progressing through the project and implementing new features and learning new things</p>
</blockquote>

<h2 id="preparing-project">Preparing Project</h2>

<h3 id="1-install-latest-phoenix-version-from-github-with-special-features">1. Install latest Phoenix version (from github, with special features)</h3>

<p><code>$ git clone </code><a href="https://github.com/phoenixframework/phoenix.git" title="https://github.com/phoenixframework/phoenix.git"><code>https://github.com/phoenixframework/phoenix.git</code></a>
<code>$ cd phoenix/installer</code>
<code>$ mix archive.install</code></p>

<h3 id="2-create-the-project-tuita-is-projects-name">2. Create the project (<strong>tuita</strong> is projectâ€™s name)</h3>

<p><code>$ mix phx.new </code><strong><code>tuita</code></strong><code> --live</code></p>

<h3 id="3-configure-project">3. Configure project</h3>

<p><strong>Timeline</strong> is the main field, which will be composed of <strong>Tuites</strong> (called <em>tuites</em> on the database, and will contain the fields marked as bold on the command (username, body, fav_count and retuite_count).</p>

<p><code>$ mix phx.gen.live Timeline Tuite tuites </code><strong><code>username body fav_count:integer retuite_count:integer</code></strong></p>

<h3 id="4-add-live-routes-to-scope">4. Add live routes to scope</h3>

<pre><code class="language-elixir">    live "/tuites", TuiteLive.Index, :index
    live "/tuites/new", TuiteLive.Index, :new
    live "/tuites/:id/edit", TuiteLive.Index, :edit

    live "/tuites/:id", TuiteLive.Show, :show
    live "/tuites/:id/show/edit", TuiteLive.Show, :edit
</code></pre>

<h3 id="5-create-and-migrate-database">5. Create and migrate Database</h3>

<p><code>$ mix ecto.create</code></p>

<p><code>$ mix ecto.migrate</code></p>

<h3 id="6-running-server">6. Running server</h3>

<p><code>$ mix phx.server</code></p>

<p>Now we visit <strong>localhost:4000</strong> and there it is, our newly (and ridiculously fast) created blog style website with live update. As simple as that.</p>

<p><img src="https://ementa.test/wp-content/uploads/2020/09/image.png" alt="" /></p>

<h2 id="project-structure">Project Structure</h2>

<ul>
  <li>_build</li>
  <li>assets</li>
  <li>config</li>
  <li>deps</li>
  <li><strong>lib</strong>
    <ul>
      <li><strong>tuita</strong>
        <ul>
          <li><strong>timeline</strong> (the one we previously set as the main container)
            <ul>
              <li>tuite.ex (configuration of each tuite)</li>
            </ul>
          </li>
          <li>(â€¦)</li>
        </ul>
      </li>
      <li><strong>tuita_web</strong>
        <ul>
          <li>controllers</li>
          <li>live
            <ul>
              <li><em>here we can configure each components presentation format</em></li>
            </ul>
          </li>
          <li>templates</li>
          <li>views</li>
          <li>(â€¦)</li>
        </ul>
      </li>
      <li>tuita.ex</li>
      <li>tuita_web.ex</li>
    </ul>
  </li>
  <li>priv</li>
  <li>test</li>
  <li>(â€¦)</li>
</ul>

<h2 id="input-validation">Input Validation</h2>

<p>After removing the unnecessary fields from <strong>form_component.html.leex</strong> and leaving just the body, proceeding to the validation of those fields on <strong>tuite.ex</strong>. Adding validation is as simple as modifying the following lines on that file:</p>

<pre><code class="language-elixir">      @doc false
      def changeset(tuite, attrs) do
        tuite
        |&gt; cast(attrs, [:body])
        |&gt; validate_required([:body])
        |&gt; validate_length(:body, min: 2, max: 275)
      end
</code></pre>

<h2 id="live-updates">Live Updates</h2>

<p><img src="https://ementa.test/wp-content/uploads/2020/09/ezgif.com-video-to-gif.gif" alt="" /></p>

<p>Working with this Phoenixâ€™s <strong><a href="https://hexdocs.pm/phoenix_live_view/Phoenix.LiveView.html">LiveView</a></strong> module allows us to automatically render the page with the newly created data, without the need to completely refresh the page. Using LiveView, only the necessary data is passed on this broadcast, keeping the internet usage pretty low.</p>

<h3 id="resources">Resources</h3>

<ul>
  <li><a href="https://hexdocs.pm/phoenix/gigalixir.html">Gigalixir</a></li>
</ul>

<blockquote>
  <p><em>(Work in Progress)</em></p>

  <p>This blog post is being updated as iâ€™m progressing through the project and implementing new features and learning new things</p>
</blockquote>
:ET